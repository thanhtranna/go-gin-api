// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "MIT",
            "url": "https://github.com/xinliangnote/go-gin-api/blob/master/LICENSE"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/admin": {
            "get": {
                "description": "admin list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.admin"
                ],
                "summary": "administrator list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Number of items displayed per page",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "nickname",
                        "name": "nickname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "mobile phone number",
                        "name": "mobile",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin_handler.listResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            },
            "post": {
                "description": "add administrator",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.admin"
                ],
                "summary": "add administrator",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "nickname",
                        "name": "nickname",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "mobile number",
                        "name": "mobile",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin_handler.createResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/admin/info": {
            "get": {
                "description": "Administrator details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.admin"
                ],
                "summary": "administrator details",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin_handler.detailResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/admin/login": {
            "post": {
                "description": "The administrator logs out",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.admin"
                ],
                "summary": "Admin log out",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin_handler.logoutResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/admin/modify_password": {
            "patch": {
                "description": "modify password",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.admin"
                ],
                "summary": "modify password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "old password",
                        "name": "old_password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "new password",
                        "name": "new_password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin_handler.modifyPasswordResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/admin/reset_password/{id}": {
            "patch": {
                "description": "reset password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.admin"
                ],
                "summary": "reset password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "hashId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin_handler.resetPasswordResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/admin/used": {
            "patch": {
                "description": "Update the administrator to enable/disable",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.admin"
                ],
                "summary": "Update the administrator to enable/disable",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hashid",
                        "name": "id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Is it enabled 1: Yes -1: No",
                        "name": "used",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin_handler.updateUsedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/admin/{id}": {
            "delete": {
                "description": "delete the administrator",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.admin"
                ],
                "summary": "delete administrator",
                "parameters": [
                    {
                        "type": "string",
                        "description": "hashId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin_handler.deleteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/authorized": {
            "get": {
                "description": "caller list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.authorized"
                ],
                "summary": "caller list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Number of items displayed per page",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "caller key",
                        "name": "business_key",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "caller secret",
                        "name": "business_secret",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "caller docking person",
                        "name": "business_developer",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Remarks",
                        "name": "remark",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authorized_handler.listResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            },
            "post": {
                "description": "add caller",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.authorized"
                ],
                "summary": "add caller",
                "parameters": [
                    {
                        "type": "string",
                        "description": "caller key",
                        "name": "business_key",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "caller docking person",
                        "name": "business_developer",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Remarks",
                        "name": "remark",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authorized_handler.createResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/authorized/used": {
            "patch": {
                "description": "updates the caller to enable/disable",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.authorized"
                ],
                "summary": "Update the caller to enable/disable",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hashid",
                        "name": "id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Is it enabled 1: Yes -1: No",
                        "name": "used",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authorized_handler.updateUsedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/authorized/{id}": {
            "delete": {
                "description": "delete the caller",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.authorized"
                ],
                "summary": "delete the caller",
                "parameters": [
                    {
                        "type": "string",
                        "description": "hashId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authorized_handler.deleteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/authorized_api": {
            "get": {
                "description": "caller interface address list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.authorized"
                ],
                "summary": "caller interface address list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "caller key",
                        "name": "business_key",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authorized_handler.listAPIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            },
            "post": {
                "description": "authorized caller interface address",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.authorized"
                ],
                "summary": "authorized caller interface address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "HashID",
                        "name": "id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "request method",
                        "name": "method",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "request address",
                        "name": "api",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authorized_handler.createAPIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/authorized_api/{id}": {
            "delete": {
                "description": "delete the caller interface address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.authorized"
                ],
                "summary": "delete the caller interface address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "primary key ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authorized_handler.deleteAPIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/config/email": {
            "patch": {
                "description": "modify the mail configuration",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.config"
                ],
                "summary": "modify the mail configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "mail server",
                        "name": "host",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "port",
                        "name": "port",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Sender's mailbox",
                        "name": "user",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Sender password",
                        "name": "pass",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Recipient's email address, multiple use, split",
                        "name": "to",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/config_handler.emailResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/menu": {
            "get": {
                "description": "menu list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.menu"
                ],
                "summary": "menu list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/menu_handler.listResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            },
            "post": {
                "description": "create/edit menu",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.menu"
                ],
                "summary": "create/edit menu",
                "parameters": [
                    {
                        "description": "Request information",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/menu_handler.createRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/menu_handler.createResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/menu/used": {
            "patch": {
                "description": "Update the menu to enable/disable",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.menu"
                ],
                "summary": "Update the menu to enable/disable",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hashid",
                        "name": "id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Is it enabled 1: Yes -1: No",
                        "name": "used",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/menu_handler.updateUsedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/menu/{id}": {
            "get": {
                "description": "menu details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.menu"
                ],
                "summary": "menu details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "hashId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/menu_handler.detailResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete menu",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.menu"
                ],
                "summary": "delete menu",
                "parameters": [
                    {
                        "type": "string",
                        "description": "hashId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/menu_handler.deleteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/tool/cache/clear": {
            "patch": {
                "description": "Clear the cache",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.tool"
                ],
                "summary": "Clear the cache",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Redis Key",
                        "name": "redis_key",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tool_handler.searchCacheResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/tool/cache/search": {
            "post": {
                "description": "query cache",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.tool"
                ],
                "summary": "query cache",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Redis Key",
                        "name": "redis_key",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tool_handler.searchCacheResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/tool/data/dbs": {
            "get": {
                "description": "query DB",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.tool"
                ],
                "summary": "query DB",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tool_handler.dbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/tool/data/mysql": {
            "post": {
                "description": "executes the SQL statement",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.tool"
                ],
                "summary": "executes the SQL statement",
                "parameters": [
                    {
                        "type": "string",
                        "description": "database name",
                        "name": "db_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "data table name",
                        "name": "table_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "SQL statement",
                        "name": "sql",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tool_handler.searchMySQLResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/tool/data/tables": {
            "post": {
                "description": "query Table",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.tool"
                ],
                "summary": "query Table",
                "parameters": [
                    {
                        "type": "string",
                        "description": "database name",
                        "name": "db_name",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tool_handler.tablesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/tool/hashids/decode/{id}": {
            "get": {
                "description": "HashIds decrypt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.tool"
                ],
                "summary": "HashIds decrypt",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ciphertext to be decrypted",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tool_handler.hashIdsDecodeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/tool/hashids/encode/{id}": {
            "get": {
                "description": "HashIds encryption",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.tool"
                ],
                "summary": "HashIds encryption",
                "parameters": [
                    {
                        "type": "string",
                        "description": "number to be encrypted",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tool_handler.hashIdsEncodeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "admin_handler.createResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Primary key ID",
                    "type": "integer"
                }
            }
        },
        "admin_handler.deleteResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Primary key ID",
                    "type": "integer"
                }
            }
        },
        "admin_handler.detailResponse": {
            "type": "object",
            "properties": {
                "mobile": {
                    "description": "Phone number",
                    "type": "string"
                },
                "nickname": {
                    "description": "Nickname",
                    "type": "string"
                },
                "username": {
                    "description": "Username",
                    "type": "string"
                }
            }
        },
        "admin_handler.listData": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "created time",
                    "type": "string"
                },
                "created_user": {
                    "description": "created by",
                    "type": "string"
                },
                "hashid": {
                    "description": "hashid",
                    "type": "string"
                },
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "is_used": {
                    "description": "Whether to enable 1: Yes -1: No",
                    "type": "integer"
                },
                "mobile": {
                    "description": "mobile phone number",
                    "type": "string"
                },
                "nickname": {
                    "description": "Nickname",
                    "type": "string"
                },
                "updated_at": {
                    "description": "updated time",
                    "type": "string"
                },
                "updated_user": {
                    "description": "Updated by",
                    "type": "string"
                },
                "username": {
                    "description": "username",
                    "type": "string"
                }
            }
        },
        "admin_handler.listResponse": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin_handler.listData"
                    }
                },
                "pagination": {
                    "type": "object",
                    "properties": {
                        "current_page": {
                            "type": "integer"
                        },
                        "pre_page_count": {
                            "type": "integer"
                        },
                        "total": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "admin_handler.loginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "description": "User token",
                    "type": "string"
                }
            }
        },
        "admin_handler.logoutResponse": {
            "type": "object",
            "properties": {
                "username": {
                    "description": "User account",
                    "type": "string"
                }
            }
        },
        "admin_handler.modifyPasswordResponse": {
            "type": "object",
            "properties": {
                "username": {
                    "description": "Username",
                    "type": "string"
                }
            }
        },
        "admin_handler.modifyPersonalInfoResponse": {
            "type": "object",
            "properties": {
                "username": {
                    "description": "User account",
                    "type": "string"
                }
            }
        },
        "admin_handler.resetPasswordResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Primary Key ID",
                    "type": "integer"
                }
            }
        },
        "admin_handler.updateUsedResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Primary Key ID",
                    "type": "integer"
                }
            }
        },
        "authorized_handler.createAPIResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Primary Key ID",
                    "type": "integer"
                }
            }
        },
        "authorized_handler.createResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Primary Key ID",
                    "type": "integer"
                }
            }
        },
        "authorized_handler.deleteAPIResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Primary Key ID",
                    "type": "integer"
                }
            }
        },
        "authorized_handler.deleteResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Primary key ID",
                    "type": "integer"
                }
            }
        },
        "authorized_handler.listAPIData": {
            "type": "object",
            "properties": {
                "api": {
                    "description": "caller docking person",
                    "type": "string"
                },
                "business_key": {
                    "description": "caller key",
                    "type": "string"
                },
                "hash_id": {
                    "description": "hashID",
                    "type": "string"
                },
                "method": {
                    "description": "caller secret",
                    "type": "string"
                }
            }
        },
        "authorized_handler.listAPIResponse": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/authorized_handler.listAPIData"
                    }
                }
            }
        },
        "authorized_handler.listData": {
            "type": "object",
            "properties": {
                "business_developer": {
                    "description": "caller docking person",
                    "type": "string"
                },
                "business_key": {
                    "description": "caller key",
                    "type": "string"
                },
                "business_secret": {
                    "description": "caller secret",
                    "type": "string"
                },
                "created_at": {
                    "description": "created time",
                    "type": "string"
                },
                "created_user": {
                    "description": "created by",
                    "type": "string"
                },
                "hashid": {
                    "description": "hashid",
                    "type": "string"
                },
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "is_used": {
                    "description": "Whether to enable 1: Yes -1: No",
                    "type": "integer"
                },
                "remark": {
                    "description": "Remark",
                    "type": "string"
                },
                "updated_at": {
                    "description": "updated time",
                    "type": "string"
                },
                "updated_user": {
                    "description": "Updated by",
                    "type": "string"
                }
            }
        },
        "authorized_handler.listResponse": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/authorized_handler.listData"
                    }
                },
                "pagination": {
                    "type": "object",
                    "properties": {
                        "current_page": {
                            "type": "integer"
                        },
                        "pre_page_count": {
                            "type": "integer"
                        },
                        "total": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "authorized_handler.updateUsedResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Primary Key ID",
                    "type": "integer"
                }
            }
        },
        "code.Failure": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "business code",
                    "type": "integer"
                },
                "message": {
                    "description": "description information",
                    "type": "string"
                }
            }
        },
        "config_handler.emailResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "email address",
                    "type": "string"
                }
            }
        },
        "menu_handler.createRequest": {
            "type": "object",
            "properties": {
                "icon": {
                    "description": "icon",
                    "type": "string"
                },
                "id": {
                    "description": "ID",
                    "type": "string"
                },
                "level": {
                    "description": "Menu type 1: Level 1 menu 2: Level 2 menu",
                    "type": "integer"
                },
                "link": {
                    "description": "link address",
                    "type": "string"
                },
                "name": {
                    "description": "Menu name",
                    "type": "string"
                },
                "pid": {
                    "description": "Parent class ID",
                    "type": "integer"
                }
            }
        },
        "menu_handler.createResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Primary Key ID",
                    "type": "integer"
                }
            }
        },
        "menu_handler.deleteResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Primary Key ID",
                    "type": "integer"
                }
            }
        },
        "menu_handler.detailResponse": {
            "type": "object",
            "properties": {
                "icon": {
                    "description": "icon",
                    "type": "string"
                },
                "id": {
                    "description": "Primary key ID",
                    "type": "integer"
                },
                "link": {
                    "description": "link address",
                    "type": "string"
                },
                "name": {
                    "description": "Menu name",
                    "type": "string"
                }
            }
        },
        "menu_handler.listData": {
            "type": "object",
            "properties": {
                "hashid": {
                    "description": "hashid",
                    "type": "string"
                },
                "icon": {
                    "description": "icon",
                    "type": "string"
                },
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "is_used": {
                    "description": "Whether to enable 1=Enable -1=Disable",
                    "type": "integer"
                },
                "link": {
                    "description": "link address",
                    "type": "string"
                },
                "name": {
                    "description": "Menu name",
                    "type": "string"
                },
                "pid": {
                    "description": "Parent class ID",
                    "type": "integer"
                }
            }
        },
        "menu_handler.listResponse": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/menu_handler.listData"
                    }
                }
            }
        },
        "menu_handler.updateUsedResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Primary Key ID",
                    "type": "integer"
                }
            }
        },
        "tool_handler.dbData": {
            "type": "object",
            "properties": {
                "db_name": {
                    "description": "Database name",
                    "type": "string"
                }
            }
        },
        "tool_handler.dbsResponse": {
            "type": "object",
            "properties": {
                "list": {
                    "description": "Database list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tool_handler.dbData"
                    }
                }
            }
        },
        "tool_handler.hashIdsDecodeResponse": {
            "type": "object",
            "properties": {
                "val": {
                    "description": "Decrypted value",
                    "type": "integer"
                }
            }
        },
        "tool_handler.hashIdsEncodeResponse": {
            "type": "object",
            "properties": {
                "val": {
                    "description": "Encrypted value",
                    "type": "string"
                }
            }
        },
        "tool_handler.searchCacheResponse": {
            "type": "object",
            "properties": {
                "ttl": {
                    "description": "Expiration time",
                    "type": "string"
                },
                "val": {
                    "description": "value after query",
                    "type": "string"
                }
            }
        },
        "tool_handler.searchMySQLResponse": {
            "type": "object",
            "properties": {
                "cols": {
                    "description": "line after query",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cols_info": {
                    "description": "row information",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tool_handler.tableColumn"
                    }
                },
                "list": {
                    "description": "Query data",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                }
            }
        },
        "tool_handler.tableColumn": {
            "type": "object",
            "properties": {
                "column_comment": {
                    "description": "field comment",
                    "type": "string"
                },
                "column_name": {
                    "description": "field name",
                    "type": "string"
                }
            }
        },
        "tool_handler.tableData": {
            "type": "object",
            "properties": {
                "table_comment": {
                    "description": "Data table comment",
                    "type": "string"
                },
                "table_name": {
                    "description": "data table name",
                    "type": "string"
                }
            }
        },
        "tool_handler.tablesResponse": {
            "type": "object",
            "properties": {
                "list": {
                    "description": "Data sheet list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tool_handler.tableData"
                    }
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "2.0",
	Host:        "127.0.0.1:9999",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "swagger Interface documentation",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
