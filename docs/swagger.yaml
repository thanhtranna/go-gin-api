definitions:
  admin_handler.createResponse:
    properties:
      id:
        description: Primary key ID
        type: integer
    type: object
  admin_handler.deleteResponse:
    properties:
      id:
        description: Primary key ID
        type: integer
    type: object
  admin_handler.detailResponse:
    properties:
      mobile:
        description: Phone number
        type: string
      nickname:
        description: Nickname
        type: string
      username:
        description: Username
        type: string
    type: object
  admin_handler.listData:
    properties:
      created_at:
        description: created time
        type: string
      created_user:
        description: created by
        type: string
      hashid:
        description: hashid
        type: string
      id:
        description: ID
        type: integer
      is_used:
        description: 'Whether to enable 1: Yes -1: No'
        type: integer
      mobile:
        description: mobile phone number
        type: string
      nickname:
        description: Nickname
        type: string
      updated_at:
        description: updated time
        type: string
      updated_user:
        description: Updated by
        type: string
      username:
        description: username
        type: string
    type: object
  admin_handler.listResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/admin_handler.listData'
        type: array
      pagination:
        properties:
          current_page:
            type: integer
          pre_page_count:
            type: integer
          total:
            type: integer
        type: object
    type: object
  admin_handler.loginResponse:
    properties:
      token:
        description: User token
        type: string
    type: object
  admin_handler.logoutResponse:
    properties:
      username:
        description: User account
        type: string
    type: object
  admin_handler.modifyPasswordResponse:
    properties:
      username:
        description: Username
        type: string
    type: object
  admin_handler.modifyPersonalInfoResponse:
    properties:
      username:
        description: User account
        type: string
    type: object
  admin_handler.resetPasswordResponse:
    properties:
      id:
        description: Primary Key ID
        type: integer
    type: object
  admin_handler.updateUsedResponse:
    properties:
      id:
        description: Primary Key ID
        type: integer
    type: object
  authorized_handler.createAPIResponse:
    properties:
      id:
        description: Primary Key ID
        type: integer
    type: object
  authorized_handler.createResponse:
    properties:
      id:
        description: Primary Key ID
        type: integer
    type: object
  authorized_handler.deleteAPIResponse:
    properties:
      id:
        description: Primary Key ID
        type: integer
    type: object
  authorized_handler.deleteResponse:
    properties:
      id:
        description: Primary key ID
        type: integer
    type: object
  authorized_handler.listAPIData:
    properties:
      api:
        description: caller docking person
        type: string
      business_key:
        description: caller key
        type: string
      hash_id:
        description: hashID
        type: string
      method:
        description: caller secret
        type: string
    type: object
  authorized_handler.listAPIResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/authorized_handler.listAPIData'
        type: array
    type: object
  authorized_handler.listData:
    properties:
      business_developer:
        description: caller docking person
        type: string
      business_key:
        description: caller key
        type: string
      business_secret:
        description: caller secret
        type: string
      created_at:
        description: created time
        type: string
      created_user:
        description: created by
        type: string
      hashid:
        description: hashid
        type: string
      id:
        description: ID
        type: integer
      is_used:
        description: 'Whether to enable 1: Yes -1: No'
        type: integer
      remark:
        description: Remark
        type: string
      updated_at:
        description: updated time
        type: string
      updated_user:
        description: Updated by
        type: string
    type: object
  authorized_handler.listResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/authorized_handler.listData'
        type: array
      pagination:
        properties:
          current_page:
            type: integer
          pre_page_count:
            type: integer
          total:
            type: integer
        type: object
    type: object
  authorized_handler.updateUsedResponse:
    properties:
      id:
        description: Primary Key ID
        type: integer
    type: object
  code.Failure:
    properties:
      code:
        description: business code
        type: integer
      message:
        description: description information
        type: string
    type: object
  config_handler.emailResponse:
    properties:
      email:
        description: email address
        type: string
    type: object
  menu_handler.createRequest:
    properties:
      icon:
        description: icon
        type: string
      id:
        description: ID
        type: string
      level:
        description: 'Menu type 1: Level 1 menu 2: Level 2 menu'
        type: integer
      link:
        description: link address
        type: string
      name:
        description: Menu name
        type: string
      pid:
        description: Parent class ID
        type: integer
    type: object
  menu_handler.createResponse:
    properties:
      id:
        description: Primary Key ID
        type: integer
    type: object
  menu_handler.deleteResponse:
    properties:
      id:
        description: Primary Key ID
        type: integer
    type: object
  menu_handler.detailResponse:
    properties:
      icon:
        description: icon
        type: string
      id:
        description: Primary key ID
        type: integer
      link:
        description: link address
        type: string
      name:
        description: Menu name
        type: string
    type: object
  menu_handler.listData:
    properties:
      hashid:
        description: hashid
        type: string
      icon:
        description: icon
        type: string
      id:
        description: ID
        type: integer
      is_used:
        description: Whether to enable 1=Enable -1=Disable
        type: integer
      link:
        description: link address
        type: string
      name:
        description: Menu name
        type: string
      pid:
        description: Parent class ID
        type: integer
    type: object
  menu_handler.listResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/menu_handler.listData'
        type: array
    type: object
  menu_handler.updateUsedResponse:
    properties:
      id:
        description: Primary Key ID
        type: integer
    type: object
  tool_handler.dbData:
    properties:
      db_name:
        description: Database name
        type: string
    type: object
  tool_handler.dbsResponse:
    properties:
      list:
        description: Database list
        items:
          $ref: '#/definitions/tool_handler.dbData'
        type: array
    type: object
  tool_handler.hashIdsDecodeResponse:
    properties:
      val:
        description: Decrypted value
        type: integer
    type: object
  tool_handler.hashIdsEncodeResponse:
    properties:
      val:
        description: Encrypted value
        type: string
    type: object
  tool_handler.searchCacheResponse:
    properties:
      ttl:
        description: Expiration time
        type: string
      val:
        description: value after query
        type: string
    type: object
  tool_handler.searchMySQLResponse:
    properties:
      cols:
        description: line after query
        items:
          type: string
        type: array
      cols_info:
        description: row information
        items:
          $ref: '#/definitions/tool_handler.tableColumn'
        type: array
      list:
        description: Query data
        items:
          additionalProperties: true
          type: object
        type: array
    type: object
  tool_handler.tableColumn:
    properties:
      column_comment:
        description: field comment
        type: string
      column_name:
        description: field name
        type: string
    type: object
  tool_handler.tableData:
    properties:
      table_comment:
        description: Data table comment
        type: string
      table_name:
        description: data table name
        type: string
    type: object
  tool_handler.tablesResponse:
    properties:
      list:
        description: Data sheet list
        items:
          $ref: '#/definitions/tool_handler.tableData'
        type: array
    type: object
host: 127.0.0.1:9999
info:
  contact: {}
  license:
    name: MIT
    url: https://github.com/xinliangnote/go-gin-api/blob/master/LICENSE
  title: swagger Interface documentation
  version: "2.0"
paths:
  /api/admin:
    get:
      consumes:
      - application/json
      description: admin list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: Number of items displayed per page
        in: query
        name: page_size
        type: string
      - description: Username
        in: query
        name: username
        type: string
      - description: nickname
        in: query
        name: nickname
        type: string
      - description: mobile phone number
        in: query
        name: mobile
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin_handler.listResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/code.Failure'
      summary: administrator list
      tags:
      - API.admin
    post:
      consumes:
      - multipart/form-data
      description: add administrator
      parameters:
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: nickname
        in: formData
        name: nickname
        required: true
        type: string
      - description: mobile number
        in: formData
        name: mobile
        required: true
        type: string
      - description: password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin_handler.createResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/code.Failure'
      summary: add administrator
      tags:
      - API.admin
  /api/admin/{id}:
    delete:
      consumes:
      - application/json
      description: delete the administrator
      parameters:
      - description: hashId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin_handler.deleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/code.Failure'
      summary: delete administrator
      tags:
      - API.admin
  /api/admin/info:
    get:
      consumes:
      - application/json
      description: Administrator details
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin_handler.detailResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/code.Failure'
      summary: administrator details
      tags:
      - API.admin
  /api/admin/login:
    post:
      consumes:
      - application/json
      description: The administrator logs out
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin_handler.logoutResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/code.Failure'
      summary: Admin log out
      tags:
      - API.admin
  /api/admin/modify_password:
    patch:
      consumes:
      - multipart/form-data
      description: modify personal information
      parameters:
      - description: nickname
        in: formData
        name: nickname
        required: true
        type: string
      - description: mobile number
        in: formData
        name: mobile
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin_handler.modifyPersonalInfoResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/code.Failure'
      summary: modify personal information
      tags:
      - API.admin
  /api/admin/reset_password/{id}:
    patch:
      consumes:
      - application/json
      description: reset password
      parameters:
      - description: hashId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin_handler.resetPasswordResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/code.Failure'
      summary: reset password
      tags:
      - API.admin
  /api/admin/used:
    patch:
      consumes:
      - multipart/form-data
      description: Update the administrator to enable/disable
      parameters:
      - description: Hashid
        in: formData
        name: id
        required: true
        type: string
      - description: 'Is it enabled 1: Yes -1: No'
        in: formData
        name: used
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin_handler.updateUsedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/code.Failure'
      summary: Update the administrator to enable/disable
      tags:
      - API.admin
  /api/authorized:
    get:
      consumes:
      - application/json
      description: caller list
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: Number of items displayed per page
        in: query
        name: page_size
        type: string
      - description: caller key
        in: query
        name: business_key
        type: string
      - description: caller secret
        in: query
        name: business_secret
        type: string
      - description: caller docking person
        in: query
        name: business_developer
        type: string
      - description: Remarks
        in: path
        name: remark
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authorized_handler.listResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/code.Failure'
      summary: caller list
      tags:
      - API.authorized
    post:
      consumes:
      - multipart/form-data
      description: add caller
      parameters:
      - description: caller key
        in: formData
        name: business_key
        required: true
        type: string
      - description: caller docking person
        in: formData
        name: business_developer
        required: true
        type: string
      - description: Remarks
        in: formData
        name: remark
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authorized_handler.createResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/code.Failure'
      summary: add caller
      tags:
      - API.authorized
  /api/authorized/{id}:
    delete:
      consumes:
      - application/json
      description: delete the caller
      parameters:
      - description: hashId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authorized_handler.deleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/code.Failure'
      summary: delete the caller
      tags:
      - API.authorized
  /api/authorized/used:
    patch:
      consumes:
      - multipart/form-data
      description: updates the caller to enable/disable
      parameters:
      - description: Hashid
        in: formData
        name: id
        required: true
        type: string
      - description: 'Is it enabled 1: Yes -1: No'
        in: formData
        name: used
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authorized_handler.updateUsedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/code.Failure'
      summary: Update the caller to enable/disable
      tags:
      - API.authorized
  /api/authorized_api:
    get:
      consumes:
      - application/json
      description: caller interface address list
      parameters:
      - description: caller key
        in: query
        name: business_key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authorized_handler.listAPIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/code.Failure'
      summary: caller interface address list
      tags:
      - API.authorized
    post:
      consumes:
      - multipart/form-data
      description: authorized caller interface address
      parameters:
      - description: HashID
        in: formData
        name: id
        required: true
        type: string
      - description: request method
        in: formData
        name: method
        required: true
        type: string
      - description: request address
        in: formData
        name: api
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authorized_handler.createAPIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/code.Failure'
      summary: authorized caller interface address
      tags:
      - API.authorized
  /api/authorized_api/{id}:
    delete:
      consumes:
      - application/json
      description: delete the caller interface address
      parameters:
      - description: primary key ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authorized_handler.deleteAPIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/code.Failure'
      summary: delete the caller interface address
      tags:
      - API.authorized
  /api/config/email:
    patch:
      consumes:
      - multipart/form-data
      description: modify the mail configuration
      parameters:
      - description: mail server
        in: formData
        name: host
        required: true
        type: string
      - description: port
        in: formData
        name: port
        required: true
        type: string
      - description: Sender's mailbox
        in: formData
        name: user
        required: true
        type: string
      - description: Sender password
        in: formData
        name: pass
        required: true
        type: string
      - description: Recipient's email address, multiple use, split
        in: formData
        name: to
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/config_handler.emailResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/code.Failure'
      summary: modify the mail configuration
      tags:
      - API.config
  /api/menu:
    get:
      consumes:
      - application/json
      description: menu list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/menu_handler.listResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/code.Failure'
      summary: menu list
      tags:
      - API.menu
    post:
      consumes:
      - multipart/form-data
      description: create/edit menu
      parameters:
      - description: Request information
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/menu_handler.createRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/menu_handler.createResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/code.Failure'
      summary: create/edit menu
      tags:
      - API.menu
  /api/menu/{id}:
    delete:
      consumes:
      - application/json
      description: delete menu
      parameters:
      - description: hashId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/menu_handler.deleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/code.Failure'
      summary: delete menu
      tags:
      - API.menu
    get:
      consumes:
      - application/json
      description: menu details
      parameters:
      - description: hashId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/menu_handler.detailResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/code.Failure'
      summary: menu details
      tags:
      - API.menu
  /api/menu/used:
    patch:
      consumes:
      - application/json
      description: Update the menu to enable/disable
      parameters:
      - description: Hashid
        in: formData
        name: id
        required: true
        type: string
      - description: 'Is it enabled 1: Yes -1: No'
        in: formData
        name: used
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/menu_handler.updateUsedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/code.Failure'
      summary: Update the menu to enable/disable
      tags:
      - API.menu
  /api/tool/cache/clear:
    patch:
      consumes:
      - multipart/form-data
      description: Clear the cache
      parameters:
      - description: Redis Key
        in: formData
        name: redis_key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tool_handler.searchCacheResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/code.Failure'
      summary: Clear the cache
      tags:
      - API.tool
  /api/tool/cache/search:
    post:
      consumes:
      - multipart/form-data
      description: query cache
      parameters:
      - description: Redis Key
        in: formData
        name: redis_key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tool_handler.searchCacheResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/code.Failure'
      summary: query cache
      tags:
      - API.tool
  /api/tool/data/dbs:
    get:
      consumes:
      - multipart/form-data
      description: query DB
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tool_handler.dbsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/code.Failure'
      summary: query DB
      tags:
      - API.tool
  /api/tool/data/mysql:
    post:
      consumes:
      - multipart/form-data
      description: executes the SQL statement
      parameters:
      - description: database name
        in: formData
        name: db_name
        required: true
        type: string
      - description: data table name
        in: formData
        name: table_name
        required: true
        type: string
      - description: SQL statement
        in: formData
        name: sql
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tool_handler.searchMySQLResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/code.Failure'
      summary: executes the SQL statement
      tags:
      - API.tool
  /api/tool/data/tables:
    post:
      consumes:
      - multipart/form-data
      description: query Table
      parameters:
      - description: database name
        in: formData
        name: db_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tool_handler.tablesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/code.Failure'
      summary: query Table
      tags:
      - API.tool
  /api/tool/hashids/decode/{id}:
    get:
      consumes:
      - application/json
      description: HashIds decrypt
      parameters:
      - description: ciphertext to be decrypted
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tool_handler.hashIdsDecodeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/code.Failure'
      summary: HashIds decrypt
      tags:
      - API.tool
  /api/tool/hashids/encode/{id}:
    get:
      consumes:
      - application/json
      description: HashIds encryption
      parameters:
      - description: number to be encrypted
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tool_handler.hashIdsEncodeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/code.Failure'
      summary: HashIds encryption
      tags:
      - API.tool
swagger: "2.0"
